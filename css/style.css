:root {
    --color_white: #FCFBF4;
    --color_charGray: #0e1111;
    --color_charGrayLight: #262b2b;
    --color_yellow: rgb(255,255,0);
    --color_blueLight: #b2b2ff;

    --color_cyan: 
    --color_magenta: 
    --color_yellow: ;
}
/* ANIMATION PAGE
   MAIN GRID SECTION
----------------------------------*/
.grid__animation-display {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 1fr 1fr;
    gap: 10px;
    justify-content: center;
    align-items: center;

    text-align: center;
}
.grid__animation-item {
    width: 100%;
    height: 50px;
    position: relative;
}
.grid__animation-display button {
    font-family: inherit;
    font-weight: inherit;
    font-size: inherit;
    background-color: inherit;
    border: 1px solid var(--color_yellow);
    border-radius: 0;
    cursor: pointer;
    padding: 10px 15px;
    transition: transform 200ms 100ms ease-in-out,
                border-radius 200ms 300ms ease-in,
                border 200ms 300ms ease-in;
}
/* Not exactly  what was stated in the instruction, but I think it looks cool*/
.grid__animation-display .scale {
    color: var(--color_yellow);
    text-shadow: 0 0 3px var(--color_cyan);
    text-align: center;
    animation: scale-in 600ms 2s both; 
}
.grid__animation-display button:hover {
    transform: scale(1.2);
    color: var(--color_yellow);
    border: 1px solid var(--color_cyan);
    border-radius: 10px;
}
.animation__wrapper {
    display: flex;
    justify-content: center; 
}
  
.typing {
    color: white;
    font-family: 'Fira Mono', monospace;
    overflow: hidden; 
    border-right: .15em solid #CE2D4F; 
    white-space: nowrap; 
    animation: typing 3s forwards steps(19),
    blinking .5s steps(1) infinite;
}
.motion {
    border-left: 2px solid var(--color_cyan);
    border-right: 2px solid var(--color_cyan);
    position: relative;
    cursor: pointer;
}
.motion .ball {
    width: 50px;

    position: absolute;
    left: 0;
}
.motion:hover .ball {
    animation: roll 3s infinite ease-in-out;
}
.flip {
    perspective: 1000px;
    transform-style: preserve-3d;
}
.flip span {
    display: inline-block; /* Needs this or it wont work */
    animation: flipUp 1s ease-in-out both;
}
@keyframes flipUp {
    0% {
        transform: rotateX(90deg);
        color: white;
    }
    30% {
        transform: rotateX(180deg)scale(2);
        color: var(--color_yellow);
    }
    85% {
        transform: rotateX(180deg) scale(2);
        color: var(--color_yellow);
    }
    100% {
        transform: rotateX(0deg);
    }
}
@keyframes roll {
    0% {
        left: 0%;
        transform: rotate(0deg);
    }
    50% {
        left: calc(100% - 50px);
        transform: rotate(360deg);
    }
    100%{
       left: 0%;
       transform: rotate(0deg);
    }
}
@keyframes blinking {
0%, 100% {
    border-color: transparent;
}
50% {
    border-color: magenta;
    }
}
@keyframes typing {
    0% {
        width: 0;
    }
    100% {
        width: 60%; /* I I added a container and it messed up the sizing, not the best way around it */
    }
}

@keyframes scale-in {
    0% {
        transform: scale(1);
        text-shadow: 0 0 3px var(--color_cyan);
    }
    10% {
        transform: scale(.01);
    }
    50% {
        transform: scale(.2);
    }
    85% {
        transform: scale(30);
        text-shadow: 0 0 50px var(--color_cyan);
    }
    90% {
        text-shadow: 0 0 100px var(--color_yellow);
    }
    100% {
        transform: scale(1.2);
        text-shadow: 0 0 10px var(--color_magenta);
    }
}
.special-animation {
    font-size: 4rem;
    color: transparent;
    -webkit-text-stroke: 1px pink;
    cursor: pointer;
    margin: 0;
}
.special-animation span {
    display: inline-block;
    animation: glow 2s infinite,
                glowScale 4s cubic-bezier( 0.79, 0.33, 0, 1 ) infinite;
}
.special-animation:hover span {
    animation:  glow 2s infinite,
    glowScale 4s cubic-bezier( 0.79, 0.33, 0, 1 ) infinite,
    flipping 1s infinite;
}
@keyframes glow {
    0% {
        text-shadow: 0px 0px 2px var(--color_magenta);
    }
    50% {
        text-shadow: 0px 0px 10px var(--color_magenta);
    }
    100% {
        text-shadow: 0px 0px 3px var(--color_magenta);
    }
}
@keyframes glowScale {
    0% {
        transform: scale(1);
    }
    25% {
        transform: translateY(-10px) scale(1.2);
    }
    50% {
        transform:  translateY(-10px) scale(1.2);
    }
    75% {
        transform: translateY(0px) scale(1);
    }
    100% {
        transform:scale(1);
    }
}
@keyframes flipping {
    0%, 100%{
        color: rgba(255, 255, 0,0);
        text-decoration: none;
    }
    50% {
        color: rgba(255, 255, 0, .7);
        text-decoration: underline;
    }
    75% {
        color: var(--color_cyan);
        -webkit-text-stroke: 0px;
        text-decoration: underline;
    }
}
.grid__animation-item span:nth-child(2){animation-delay: 200ms}
.grid__animation-item span:nth-child(3){animation-delay: 300ms}
.grid__animation-item span:nth-child(4){animation-delay: 400ms}
.grid__animation-item span:nth-child(5){animation-delay: 500ms}
.grid__animation-item span:nth-child(6){animation-delay: 600ms}
.grid__animation-item span:nth-child(7){animation-delay: 700ms}

/* RESPONSIVE Styles
----------------------------------*/

@media screen and (max-width: 749px) {
    h1 {
        margin-bottom: 20px;
        font-size: 75px;
        line-height: 0.9;
    }
    h2 {
        line-height:1;
    }

}